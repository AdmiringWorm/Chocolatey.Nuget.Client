#nullable enable
NuGet.LibraryModel.LibraryDependency.Aliases.init -> void
NuGet.LibraryModel.LibraryDependency.AutoReferenced.init -> void
NuGet.LibraryModel.LibraryDependency.GeneratePathProperty.init -> void
NuGet.LibraryModel.LibraryDependency.IncludeType.init -> void
NuGet.LibraryModel.LibraryDependency.LibraryDependency(NuGet.LibraryModel.LibraryDependency! other) -> void
NuGet.LibraryModel.LibraryDependency.LibraryRange.init -> void
NuGet.LibraryModel.LibraryDependency.NoWarn.get -> System.Collections.Immutable.ImmutableArray<NuGet.Common.NuGetLogCode>
NuGet.LibraryModel.LibraryDependency.NoWarn.init -> void
NuGet.LibraryModel.LibraryDependency.ReferenceType.init -> void
NuGet.LibraryModel.LibraryDependency.SuppressParent.init -> void
NuGet.LibraryModel.LibraryDependency.VersionCentrallyManaged.init -> void
NuGet.LibraryModel.LibraryDependency.VersionOverride.init -> void
NuGet.LibraryModel.LibraryRange.LibraryRange(NuGet.LibraryModel.LibraryRange! other) -> void
NuGet.LibraryModel.LibraryRange.Name.init -> void
NuGet.LibraryModel.LibraryRange.TypeConstraint.init -> void
NuGet.LibraryModel.LibraryRange.VersionRange.init -> void
NuGet.LibraryModel.PrunePackageReference
NuGet.LibraryModel.PrunePackageReference.Equals(NuGet.LibraryModel.PrunePackageReference? other) -> bool
NuGet.LibraryModel.PrunePackageReference.Name.get -> string!
NuGet.LibraryModel.PrunePackageReference.PrunePackageReference(string! name, NuGet.Versioning.VersionRange! versionRange) -> void
NuGet.LibraryModel.PrunePackageReference.VersionRange.get -> NuGet.Versioning.VersionRange!
override NuGet.LibraryModel.PrunePackageReference.Equals(object? obj) -> bool
override NuGet.LibraryModel.PrunePackageReference.GetHashCode() -> int
override NuGet.LibraryModel.PrunePackageReference.ToString() -> string!
static NuGet.LibraryModel.PrunePackageReference.Create(string! name, string! version) -> NuGet.LibraryModel.PrunePackageReference!
